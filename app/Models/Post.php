<?php

namespace App\Models;

use Carbon\Carbon;
use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Support\Collection;

/**
 * Class Post
 * @package App\Models
 *
 * @property integer $id
 * @property string $autor
 * @property Carbon $date
 * @property string $short_story
 * @property string $full_story
 * @property Collection $xfields
 * @property string $title
 * @property string $descr
 * @property string $keywords
 * @property string $category
 * @property string $alt_name
 * @property integer $comm_num
 * @property integer $allow_comm
 * @property integer $allow_main
 * @property integer $approve
 * @property integer $fixed
 * @property integer $allow_br
 * @property string $symbol
 * @property string $tags
 * @property string $metatitle
 *
 * @property PostExtras $extras
 */
class Post extends Model
{
    use HasFactory;

    protected $table = 'dle_post';

    protected $casts = [
        'date' => 'datetime'
    ];

    public function getXfieldsAttribute($xfields)
    {
        return collect(parseXfield($xfields));
    }

    public function extras()
    {
        return $this->hasOne(PostExtras::class, 'news_id', 'id');
    }

    public function extrasCats()
    {
        return $this->hasMany(PostExtrasCats::class, 'news_id', 'id');
    }

    protected static function boot()
    {
        static::addGlobalScope(function ($q) {
            $q->where('allow_main', 1);
            $q->where('approve', 1);
            $q->where('fixed', 0);
        });

        static::deleted(function (self $q) {
            $q->extras()->delete();
            $q->extrasCats()->delete();
            self::deleteFile($q);
        });
        parent::boot(); // TODO: Change the autogenerated stub
    }

    private static function deleteFile(self $item)
    {
        $filepath = $item->xfields->get(config('xfields.mp3_url'));
        if (!empty($filepath)) {
            $filepath = str_replace(env('APP_URL'), '', $filepath);
            $filepath = base_path($filepath);
            if (is_file($filepath))
                @unlink($filepath);
        }
    }
}
